<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.jpaw</groupId>
        <artifactId>bonaparte-base</artifactId>
        <version>2.2.1-SNAPSHOT</version>
        <relativePath>../bonaparte-base/pom.xml</relativePath>
    </parent>

    <artifactId>offHeapMap</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <lz4.version>1.2.0</lz4.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>de.jpaw</groupId>
            <artifactId>bonaparte-core</artifactId>
            <version>${bonaparte.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>${lz4.version}</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
<!--             
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-8</version>
                <configuration>
                    <javahOutputDirectory>${project.build.directory}/src/main/c</javahOutputDirectory>
                </configuration>
            </plugin>
 -->            
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <configuration>
                            <target
                                name="jni"
                                description="Generate headers and compile the native code">
                                <echo>Generating JNI headers</echo>
                                <!-- Does not work with OpenJDK, because Ant javah assumes Sun JVM
                                <javah
                                    destdir="${project.basedir}/src/main/c"
                                    classpath="${project.build.outputDirectory}">
                                    <class name="de.jpaw.offHeap.LongToByteArrayOffHeapMap"/>
                                </javah>
                                 -->
                                <exec executable="javah" >
                                    <arg value="-o" />
                                    <arg value="${project.basedir}/src/main/c/jpawMap.h" />
                                    <arg value="-classpath" />
                                    <arg value="${project.build.outputDirectory}" />
                                    <arg value="-force" />
                                    <arg value="de.jpaw.offHeap.LongToByteArrayOffHeapMap" />
                                </exec>

                                <exec executable="make" ></exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.14</version>
                <configuration>
                    <!-- cannot use target/lib because we depend on additional 4rd party libraries (lz4) -->
                    <argLine>-Djava.library.path=${user.home}/lib</argLine>
                    
<!-- This does not work:
                    <systemProperties>
                        <property>
                            <name>java.library.path</name>
                            <value>${user.home}/lib</value>
                        </property>
                    </systemProperties>
 -->                    
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
